{
  "firstLayout": "",
  "gdVersion": {
    "build": 98,
    "major": 4,
    "minor": 0,
    "revision": 0
  },
  "properties": {
    "adMobAppId": "",
    "folderProject": false,
    "linuxExecutableFilename": "",
    "macExecutableFilename": "",
    "orientation": "landscape",
    "packageName": "com.example.gamename",
    "projectFile": "/home/szoszo/Documents/Projects/GDevelop/keyboard-on-mobile/game.json",
    "scaleMode": "linear",
    "sizeOnStartupMode": "",
    "useExternalSourceFiles": false,
    "version": "1.0.0",
    "winExecutableFilename": "",
    "winExecutableIconFile": "",
    "name": "Keyboard mobile",
    "author": "@Bouh https://github.com/Bouh / gametemplates.itch.io",
    "windowWidth": 800,
    "windowHeight": 600,
    "latestCompilationDirectory": "C:\\Users\\RTX-Bouh\\Desktop\\Keyboard_mobile\\Keyboard_mobile\\export",
    "maxFPS": 60,
    "minFPS": 20,
    "verticalSync": false,
    "platformSpecificAssets": {},
    "loadingScreen": {
      "showGDevelopSplash": true
    },
    "extensions": [
      {
        "name": "BuiltinObject"
      },
      {
        "name": "BuiltinAudio"
      },
      {
        "name": "BuiltinVariables"
      },
      {
        "name": "BuiltinTime"
      },
      {
        "name": "BuiltinMouse"
      },
      {
        "name": "BuiltinKeyboard"
      },
      {
        "name": "BuiltinJoystick"
      },
      {
        "name": "BuiltinCamera"
      },
      {
        "name": "BuiltinWindow"
      },
      {
        "name": "BuiltinFile"
      },
      {
        "name": "BuiltinNetwork"
      },
      {
        "name": "BuiltinScene"
      },
      {
        "name": "BuiltinAdvanced"
      },
      {
        "name": "Sprite"
      },
      {
        "name": "BuiltinCommonInstructions"
      },
      {
        "name": "BuiltinCommonConversions"
      },
      {
        "name": "BuiltinStringInstructions"
      },
      {
        "name": "BuiltinMathematicalTools"
      },
      {
        "name": "BuiltinExternalLayouts"
      }
    ],
    "platforms": [
      {
        "name": "GDevelop JS platform"
      }
    ],
    "currentPlatform": "GDevelop JS platform"
  },
  "resources": {
    "resources": [
      {
        "alwaysLoaded": false,
        "file": "NewObject-1.png",
        "kind": "image",
        "metadata": "",
        "name": "NewObject-1.png",
        "smoothed": false,
        "userAdded": true
      }
    ],
    "resourceFolders": []
  },
  "objects": [
    {
      "bold": true,
      "italic": false,
      "name": "Change_scene",
      "smoothed": true,
      "tags": "",
      "type": "TextObject::Text",
      "underlined": false,
      "variables": [],
      "behaviors": [],
      "string": "Change scene",
      "font": "",
      "characterSize": 20,
      "color": {
        "b": 0,
        "g": 0,
        "r": 0
      }
    }
  ],
  "objectsGroups": [],
  "variables": [
    {
      "name": "Focus_input",
      "value": "null"
    }
  ],
  "layouts": [
    {
      "b": 192,
      "disableInputWhenNotFocused": true,
      "mangledName": "Simple",
      "name": "Simple",
      "oglFOV": 90,
      "oglZFar": 500,
      "oglZNear": 1,
      "r": 120,
      "standardSortMethod": true,
      "stopSoundsOnStartup": false,
      "title": "",
      "v": 71,
      "uiSettings": {
        "grid": false,
        "gridB": 255,
        "gridG": 180,
        "gridHeight": 32,
        "gridOffsetX": 0,
        "gridOffsetY": 0,
        "gridR": 158,
        "gridWidth": 32,
        "snap": true,
        "windowMask": false,
        "zoomFactor": 1.12
      },
      "objectsGroups": [],
      "variables": [],
      "instances": [
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "text_entry",
          "width": 0,
          "x": 166,
          "y": 205,
          "zOrder": 2,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "Title",
          "width": 0,
          "x": 45,
          "y": 38,
          "zOrder": 4,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "Info",
          "width": 0,
          "x": 59,
          "y": 249,
          "zOrder": 6,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 54,
          "layer": "",
          "locked": false,
          "name": "Input",
          "width": 272,
          "x": 412,
          "y": 145,
          "zOrder": 0,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "ID_bind",
              "value": "PSEUDO"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "Debug",
          "width": 0,
          "x": 139,
          "y": 370,
          "zOrder": 7,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 54,
          "layer": "",
          "locked": false,
          "name": "Input",
          "width": 264,
          "x": 52,
          "y": 144,
          "zOrder": 0,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "ID_bind",
              "value": "NAME"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 31,
          "layer": "",
          "locked": false,
          "name": "Texte",
          "width": 253,
          "x": 64,
          "y": 157,
          "zOrder": 1,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "ID_bind",
              "value": "NAME"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "text_entry_2",
          "width": 0,
          "x": 530,
          "y": 205,
          "zOrder": 8,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "Texte_2",
          "width": 0,
          "x": 430,
          "y": 161,
          "zOrder": 9,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "ID_bind",
              "value": "PSEUDO"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "Change_scene",
          "width": 0,
          "x": 449,
          "y": 545,
          "zOrder": 9,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 54,
          "layer": "",
          "locked": false,
          "name": "Input",
          "width": 157,
          "x": 437,
          "y": 529,
          "zOrder": 0,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "Type",
              "value": "scene"
            }
          ]
        }
      ],
      "objects": [
        {
          "bold": true,
          "italic": false,
          "name": "Texte_2",
          "smoothed": true,
          "tags": "",
          "type": "TextObject::Text",
          "underlined": false,
          "variables": [],
          "behaviors": [],
          "string": "Enter your pseudo",
          "font": "",
          "characterSize": 20,
          "color": {
            "b": 0,
            "g": 0,
            "r": 0
          }
        },
        {
          "bold": true,
          "italic": false,
          "name": "Texte",
          "smoothed": true,
          "tags": "",
          "type": "TextObject::Text",
          "underlined": false,
          "variables": [],
          "behaviors": [],
          "string": "Enter your name",
          "font": "",
          "characterSize": 20,
          "color": {
            "b": 0,
            "g": 0,
            "r": 0
          }
        },
        {
          "bottomMargin": 10,
          "height": 32,
          "leftMargin": 10,
          "name": "Input",
          "rightMargin": 10,
          "tags": "",
          "texture": "NewObject-1.png",
          "tiled": false,
          "topMargin": 10,
          "type": "PanelSpriteObject::PanelSprite",
          "width": 32,
          "variables": [],
          "behaviors": []
        },
        {
          "name": "text_entry",
          "tags": "",
          "type": "TextEntryObject::TextEntry",
          "variables": [],
          "behaviors": [
            {
              "name": "Text_for_mobile",
              "type": "Mobile_keyboard::Text_for_mobile"
            }
          ]
        },
        {
          "bold": true,
          "italic": false,
          "name": "Title",
          "smoothed": true,
          "tags": "",
          "type": "TextObject::Text",
          "underlined": false,
          "variables": [],
          "behaviors": [],
          "string": "Open / close keyboard on mobile",
          "font": "",
          "characterSize": 45,
          "color": {
            "b": 255,
            "g": 255,
            "r": 255
          }
        },
        {
          "bold": true,
          "italic": true,
          "name": "Info",
          "smoothed": true,
          "tags": "",
          "type": "TextObject::Text",
          "underlined": false,
          "variables": [],
          "behaviors": [],
          "string": "Touch the input open mobile keyboard and write with it.\nTouch enter key for validate your input.\nOr\nTouch outside the input for close mobile keyboard.",
          "font": "",
          "characterSize": 25,
          "color": {
            "b": 255,
            "g": 255,
            "r": 255
          }
        },
        {
          "bold": false,
          "italic": false,
          "name": "Debug",
          "smoothed": true,
          "tags": "",
          "type": "TextObject::Text",
          "underlined": false,
          "variables": [],
          "behaviors": [],
          "string": "{DEBUG}",
          "font": "",
          "characterSize": 20,
          "color": {
            "b": 255,
            "g": 255,
            "r": 255
          }
        },
        {
          "name": "text_entry_2",
          "tags": "",
          "type": "TextEntryObject::TextEntry",
          "variables": [],
          "behaviors": [
            {
              "name": "Text_for_mobile",
              "type": "Mobile_keyboard::Text_for_mobile"
            }
          ]
        }
      ],
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "On mobile devices it is going to trigger the system keyboard",
          "comment2": ""
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "Example is made by Bouh, credit goes to him. https://github.com/Bouh",
          "comment2": ""
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "for more examples and templates visit gametemplates.itch.io",
          "comment2": ""
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": false,
                "value": "SourisBouton"
              },
              "parameters": [
                "Input",
                "Left"
              ],
              "subInstructions": []
            },
            {
              "type": {
                "inverted": false,
                "value": "SourisSurObjet"
              },
              "parameters": [
                "Input",
                "",
                "",
                ""
              ],
              "subInstructions": []
            },
            {
              "type": {
                "inverted": false,
                "value": "VarObjetTxt"
              },
              "parameters": [
                "Input",
                "Type",
                "=",
                "\"scene\""
              ],
              "subInstructions": []
            },
            {
              "type": {
                "inverted": false,
                "value": "BuiltinCommonInstructions::Once"
              },
              "parameters": [],
              "subInstructions": []
            }
          ],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "Scene"
              },
              "parameters": [
                "",
                "\"Advanced\"",
                "yes"
              ],
              "subInstructions": []
            }
          ],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": false,
                "value": "DepartScene"
              },
              "parameters": [
                ""
              ],
              "subInstructions": []
            }
          ],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "ModVarGlobalTxt"
              },
              "parameters": [
                "Focus_input",
                "=",
                "\"None\""
              ],
              "subInstructions": []
            },
            {
              "type": {
                "inverted": false,
                "value": "TextEntryObject::Activate"
              },
              "parameters": [
                "text_entry",
                "no"
              ],
              "subInstructions": []
            },
            {
              "type": {
                "inverted": false,
                "value": "TextEntryObject::Activate"
              },
              "parameters": [
                "text_entry_2",
                "no"
              ],
              "subInstructions": []
            }
          ],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "TextObject::String"
              },
              "parameters": [
                "Texte",
                "=",
                "text_entry.String()"
              ],
              "subInstructions": []
            },
            {
              "type": {
                "inverted": false,
                "value": "TextObject::String"
              },
              "parameters": [
                "Texte_2",
                "=",
                "text_entry_2.String()"
              ],
              "subInstructions": []
            }
          ],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": false,
                "value": "SourisBouton"
              },
              "parameters": [
                "",
                "Right"
              ],
              "subInstructions": []
            }
          ],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "Delete"
              },
              "parameters": [
                "text_entry",
                "text_entry"
              ],
              "subInstructions": []
            }
          ],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": false,
                "value": "SourisBouton"
              },
              "parameters": [
                "",
                "Left"
              ],
              "subInstructions": []
            },
            {
              "type": {
                "inverted": true,
                "value": "SourisSurObjet"
              },
              "parameters": [
                "Input",
                "",
                "no",
                ""
              ],
              "subInstructions": []
            }
          ],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "ModVarGlobalTxt"
              },
              "parameters": [
                "Focus_input",
                "=",
                "\"None\""
              ],
              "subInstructions": []
            },
            {
              "type": {
                "inverted": false,
                "value": "Mobile_keyboard::Text_for_mobile::closeKeyboard"
              },
              "parameters": [
                "text_entry",
                "Text_for_mobile",
                ""
              ],
              "subInstructions": []
            },
            {
              "type": {
                "inverted": false,
                "value": "Mobile_keyboard::Text_for_mobile::closeKeyboard"
              },
              "parameters": [
                "text_entry_2",
                "Text_for_mobile",
                ""
              ],
              "subInstructions": []
            },
            {
              "type": {
                "inverted": false,
                "value": "TextEntryObject::Activate"
              },
              "parameters": [
                "text_entry_2",
                "no"
              ],
              "subInstructions": []
            },
            {
              "type": {
                "inverted": false,
                "value": "TextEntryObject::Activate"
              },
              "parameters": [
                "text_entry",
                "no"
              ],
              "subInstructions": []
            }
          ],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": false,
                "value": "SourisBouton"
              },
              "parameters": [
                "",
                "Left"
              ],
              "subInstructions": []
            },
            {
              "type": {
                "inverted": false,
                "value": "SourisSurObjet"
              },
              "parameters": [
                "Input",
                "",
                "no",
                ""
              ],
              "subInstructions": []
            }
          ],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "ModVarGlobalTxt"
              },
              "parameters": [
                "Focus_input",
                "=",
                "Input.VariableString(ID_bind)"
              ],
              "subInstructions": []
            }
          ],
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "VarObjetTxt"
                      },
                      "parameters": [
                        "Input",
                        "ID_bind",
                        "=",
                        "\"NAME\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "Mobile_keyboard::Text_for_mobile::openKeyboard"
                      },
                      "parameters": [
                        "text_entry",
                        "Text_for_mobile",
                        ""
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "TextEntryObject::Activate"
                      },
                      "parameters": [
                        "text_entry",
                        "yes"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "TextEntryObject::Activate"
                      },
                      "parameters": [
                        "text_entry_2",
                        "no"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "VarObjetTxt"
                      },
                      "parameters": [
                        "Input",
                        "ID_bind",
                        "=",
                        "\"PSEUDO\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "Mobile_keyboard::Text_for_mobile::openKeyboard"
                      },
                      "parameters": [
                        "text_entry_2",
                        "Text_for_mobile",
                        ""
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "TextEntryObject::Activate"
                      },
                      "parameters": [
                        "text_entry",
                        "no"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "TextEntryObject::Activate"
                      },
                      "parameters": [
                        "text_entry_2",
                        "yes"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            }
          ]
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "disabled": false,
          "folded": false,
          "name": "",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "TextObject::String"
                  },
                  "parameters": [
                    "Debug",
                    "=",
                    "\"text entry (Left): \" + text_entry.String() + NewLine() +\n\"text entry 2 (Right): \" + text_entry_2.String() + NewLine() +\n\"Focus : \" + GlobalVariableString(Focus_input)"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": []
        }
      ],
      "layers": [
        {
          "name": "",
          "visibility": true,
          "cameras": [
            {
              "defaultSize": true,
              "defaultViewport": true,
              "height": 0,
              "viewportBottom": 1,
              "viewportLeft": 0,
              "viewportRight": 1,
              "viewportTop": 0,
              "width": 0
            }
          ],
          "effects": []
        }
      ],
      "behaviorsSharedData": [
        {
          "name": "Text_for_mobile",
          "type": "Mobile_keyboard::Text_for_mobile"
        }
      ]
    },
    {
      "b": 192,
      "disableInputWhenNotFocused": true,
      "mangledName": "Advanced",
      "name": "Advanced",
      "oglFOV": 90,
      "oglZFar": 500,
      "oglZNear": 1,
      "r": 120,
      "standardSortMethod": true,
      "stopSoundsOnStartup": false,
      "title": "",
      "v": 71,
      "uiSettings": {
        "grid": false,
        "gridB": 255,
        "gridG": 180,
        "gridHeight": 32,
        "gridOffsetX": 0,
        "gridOffsetY": 0,
        "gridR": 158,
        "gridWidth": 32,
        "snap": true,
        "windowMask": false,
        "zoomFactor": 1
      },
      "objectsGroups": [],
      "variables": [],
      "instances": [
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "text_entry",
          "width": 0,
          "x": 366,
          "y": 472,
          "zOrder": 2,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "Title",
          "width": 0,
          "x": 45,
          "y": 38,
          "zOrder": 4,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "Info",
          "width": 0,
          "x": 59,
          "y": 249,
          "zOrder": 6,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 54,
          "layer": "",
          "locked": false,
          "name": "Input",
          "width": 272,
          "x": 412,
          "y": 145,
          "zOrder": 0,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "ID_bind",
              "value": "PSEUDO"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "Texte",
          "width": 0,
          "x": 425,
          "y": 160,
          "zOrder": 1,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "Text",
              "value": "Enter your pseudo"
            },
            {
              "name": "ID_bind",
              "value": "PSEUDO"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 31,
          "layer": "",
          "locked": false,
          "name": "Texte",
          "width": 253,
          "x": 252,
          "y": 210,
          "zOrder": 1,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "Text",
              "value": "Birthday date"
            },
            {
              "name": "ID_bind",
              "value": "BIRTHDAY"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 54,
          "layer": "",
          "locked": false,
          "name": "Input",
          "width": 272,
          "x": 240,
          "y": 197,
          "zOrder": 0,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "ID_bind",
              "value": "BIRTHDAY"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "Debug",
          "width": 0,
          "x": 140,
          "y": 372,
          "zOrder": 7,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 54,
          "layer": "",
          "locked": false,
          "name": "Input",
          "width": 272,
          "x": 52,
          "y": 144,
          "zOrder": 0,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "ID_bind",
              "value": "NAME"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 31,
          "layer": "",
          "locked": false,
          "name": "Texte",
          "width": 253,
          "x": 64,
          "y": 157,
          "zOrder": 1,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "Text",
              "value": "Enter your name"
            },
            {
              "name": "ID_bind",
              "value": "NAME"
            }
          ]
        },
        {
          "angle": 0,
          "customSize": false,
          "height": 0,
          "layer": "",
          "locked": false,
          "name": "Change_scene",
          "width": 0,
          "x": 638,
          "y": 556,
          "zOrder": 9,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": []
        },
        {
          "angle": 0,
          "customSize": true,
          "height": 54,
          "layer": "",
          "locked": false,
          "name": "Input",
          "width": 157,
          "x": 626,
          "y": 540,
          "zOrder": 0,
          "numberProperties": [],
          "stringProperties": [],
          "initialVariables": [
            {
              "name": "Type",
              "value": "scene"
            }
          ]
        }
      ],
      "objects": [
        {
          "bold": true,
          "italic": false,
          "name": "Texte",
          "smoothed": true,
          "tags": "",
          "type": "TextObject::Text",
          "underlined": false,
          "variables": [],
          "behaviors": [],
          "string": "{PLACEHOLDER}",
          "font": "",
          "characterSize": 20,
          "color": {
            "b": 127,
            "g": 127,
            "r": 127
          }
        },
        {
          "bottomMargin": 10,
          "height": 32,
          "leftMargin": 10,
          "name": "Input",
          "rightMargin": 10,
          "tags": "",
          "texture": "NewObject-1.png",
          "tiled": false,
          "topMargin": 10,
          "type": "PanelSpriteObject::PanelSprite",
          "width": 32,
          "variables": [],
          "behaviors": []
        },
        {
          "name": "text_entry",
          "tags": "",
          "type": "TextEntryObject::TextEntry",
          "variables": [],
          "behaviors": [
            {
              "name": "Text_for_mobile",
              "type": "Mobile_keyboard::Text_for_mobile"
            }
          ]
        },
        {
          "bold": true,
          "italic": false,
          "name": "Title",
          "smoothed": true,
          "tags": "",
          "type": "TextObject::Text",
          "underlined": false,
          "variables": [],
          "behaviors": [],
          "string": "Open / close keyboard on mobile",
          "font": "",
          "characterSize": 45,
          "color": {
            "b": 255,
            "g": 255,
            "r": 255
          }
        },
        {
          "bold": true,
          "italic": true,
          "name": "Info",
          "smoothed": true,
          "tags": "",
          "type": "TextObject::Text",
          "underlined": false,
          "variables": [],
          "behaviors": [],
          "string": "Touch the input open mobile keyboard and write with it.\nTouch enter key for validate your input.\nOr\nTouch outside the input for close mobile keyboard.",
          "font": "",
          "characterSize": 25,
          "color": {
            "b": 255,
            "g": 255,
            "r": 255
          }
        },
        {
          "bold": false,
          "italic": false,
          "name": "Debug",
          "smoothed": true,
          "tags": "",
          "type": "TextObject::Text",
          "underlined": false,
          "variables": [],
          "behaviors": [],
          "string": "{DEBUG}",
          "font": "",
          "characterSize": 20,
          "color": {
            "b": 255,
            "g": 255,
            "r": 255
          }
        },
        {
          "name": "Button_change_scene",
          "tags": "",
          "type": "Sprite",
          "updateIfNotVisible": false,
          "variables": [],
          "behaviors": [],
          "animations": [
            {
              "name": "",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "NewObject-1.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "On mobile devices it is going to trigger the system keyboard",
          "comment2": ""
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "Example is made by Bouh, credit goes to him. https://github.com/Bouh",
          "comment2": ""
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "for more examples and templates visit gametemplates.itch.io",
          "comment2": ""
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": false,
                "value": "SourisBouton"
              },
              "parameters": [
                "Input",
                "Left"
              ],
              "subInstructions": []
            },
            {
              "type": {
                "inverted": false,
                "value": "SourisSurObjet"
              },
              "parameters": [
                "Input",
                "",
                "",
                ""
              ],
              "subInstructions": []
            },
            {
              "type": {
                "inverted": false,
                "value": "VarObjetTxt"
              },
              "parameters": [
                "Input",
                "Type",
                "=",
                "\"scene\""
              ],
              "subInstructions": []
            },
            {
              "type": {
                "inverted": false,
                "value": "BuiltinCommonInstructions::Once"
              },
              "parameters": [],
              "subInstructions": []
            }
          ],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "Scene"
              },
              "parameters": [
                "",
                "\"Simple\"",
                "yes"
              ],
              "subInstructions": []
            }
          ],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": false,
                "value": "DepartScene"
              },
              "parameters": [
                ""
              ],
              "subInstructions": []
            }
          ],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "TextObject::String"
              },
              "parameters": [
                "Texte",
                "=",
                "Texte.VariableString(Text)"
              ],
              "subInstructions": []
            },
            {
              "type": {
                "inverted": false,
                "value": "ModVarGlobalTxt"
              },
              "parameters": [
                "Focus_input",
                "=",
                "\"null\""
              ],
              "subInstructions": []
            },
            {
              "type": {
                "inverted": false,
                "value": "TextEntryObject::Activate"
              },
              "parameters": [
                "text_entry",
                "no"
              ],
              "subInstructions": []
            }
          ],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": false,
                "value": "VarGlobalTxt"
              },
              "parameters": [
                "Focus_input",
                "!=",
                "\"null\""
              ],
              "subInstructions": []
            },
            {
              "type": {
                "inverted": false,
                "value": "VarObjetTxt"
              },
              "parameters": [
                "Texte",
                "ID_bind",
                "=",
                "GlobalVariableString(Focus_input)"
              ],
              "subInstructions": []
            }
          ],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "TextEntryObject::Activate"
              },
              "parameters": [
                "text_entry",
                "yes"
              ],
              "subInstructions": []
            }
          ],
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "TextObject::String"
                  },
                  "parameters": [
                    "Texte",
                    "=",
                    "Texte.VariableString(Text)"
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": false,
                    "value": "BuiltinCommonInstructions::Once"
                  },
                  "parameters": [],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "TextObject::ChangeColor"
                  },
                  "parameters": [
                    "Texte",
                    "\"127;127;127\""
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": false,
                    "value": "TextObject::String"
                  },
                  "parameters": [
                    "Texte",
                    "=",
                    "\"\""
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "TextObject::String"
                  },
                  "parameters": [
                    "Texte",
                    "=",
                    "\"\""
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "TextObject::ChangeColor"
                  },
                  "parameters": [
                    "Texte",
                    "\"127;127;127\""
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": false,
                    "value": "TextObject::String"
                  },
                  "parameters": [
                    "Texte",
                    "=",
                    "Texte.VariableString(Text)"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "TextObject::ChangeColor"
                  },
                  "parameters": [
                    "Texte",
                    "\"0;0;0\""
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": false,
                    "value": "TextObject::String"
                  },
                  "parameters": [
                    "Texte",
                    "=",
                    "text_entry.String()"
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjetTxt"
                  },
                  "parameters": [
                    "Texte",
                    "Default_Text_Possible",
                    "=",
                    "\"yes\""
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ]
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": false,
                "value": "SourisSurObjet"
              },
              "parameters": [
                "Input",
                "",
                "",
                ""
              ],
              "subInstructions": []
            },
            {
              "type": {
                "inverted": false,
                "value": "SourisBouton"
              },
              "parameters": [
                "Input",
                "Left"
              ],
              "subInstructions": []
            }
          ],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "Mobile_keyboard::Text_for_mobile::openKeyboard"
              },
              "parameters": [
                "text_entry",
                "Text_for_mobile",
                ""
              ],
              "subInstructions": []
            },
            {
              "type": {
                "inverted": false,
                "value": "ModVarGlobalTxt"
              },
              "parameters": [
                "Focus_input",
                "=",
                "Input.VariableString(ID_bind)"
              ],
              "subInstructions": []
            }
          ],
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "AjoutObjConcern"
                  },
                  "parameters": [
                    "",
                    "Texte"
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": false,
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "Texte",
                    "ID_bind",
                    "=",
                    "GlobalVariableString(Focus_input)"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "TextEntryObject::String"
                  },
                  "parameters": [
                    "text_entry",
                    "=",
                    "\"\""
                  ],
                  "subInstructions": []
                }
              ],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "TextObject::String"
                      },
                      "parameters": [
                        "Texte",
                        "!=",
                        "\"\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "TextEntryObject::String"
                      },
                      "parameters": [
                        "text_entry",
                        "=",
                        "\"\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "TextObject::String"
                          },
                          "parameters": [
                            "Texte",
                            "!=",
                            "Texte.VariableString(Text)"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "TextEntryObject::String"
                          },
                          "parameters": [
                            "text_entry",
                            "=",
                            "Texte.String()"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    }
                  ]
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "TextObject::String"
                      },
                      "parameters": [
                        "Texte",
                        "=",
                        "Texte.VariableString(Text)"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "TextEntryObject::String"
                      },
                      "parameters": [
                        "text_entry",
                        "=",
                        "\"\""
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "TextObject::ChangeColor"
                      },
                      "parameters": [
                        "Texte",
                        "\"127;127;127\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            }
          ]
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": false,
                "value": "AjoutObjConcern"
              },
              "parameters": [
                "",
                "Input"
              ],
              "subInstructions": []
            },
            {
              "type": {
                "inverted": false,
                "value": "VarObjetTxt"
              },
              "parameters": [
                "Input",
                "ID_bind",
                "=",
                "GlobalVariableString(Focus_input)"
              ],
              "subInstructions": []
            },
            {
              "type": {
                "inverted": false,
                "value": "BuiltinCommonInstructions::And"
              },
              "parameters": [],
              "subInstructions": [
                {
                  "type": {
                    "inverted": true,
                    "value": "SourisSurObjet"
                  },
                  "parameters": [
                    "Input",
                    "",
                    "",
                    ""
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": false,
                    "value": "SourisBouton"
                  },
                  "parameters": [
                    "Input",
                    "Left"
                  ],
                  "subInstructions": []
                }
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "Mobile_keyboard::Text_for_mobile::closeKeyboard"
              },
              "parameters": [
                "text_entry",
                "Text_for_mobile",
                ""
              ],
              "subInstructions": []
            },
            {
              "type": {
                "inverted": false,
                "value": "TextEntryObject::String"
              },
              "parameters": [
                "text_entry",
                "=",
                "\"\""
              ],
              "subInstructions": []
            },
            {
              "type": {
                "inverted": false,
                "value": "TextEntryObject::Activate"
              },
              "parameters": [
                "text_entry",
                "no"
              ],
              "subInstructions": []
            },
            {
              "type": {
                "inverted": false,
                "value": "ModVarGlobalTxt"
              },
              "parameters": [
                "Focus_input",
                "=",
                "\"reset\""
              ],
              "subInstructions": []
            },
            {
              "type": {
                "inverted": false,
                "value": "ModVarGlobalTxt"
              },
              "parameters": [
                "Previous_Focus_input",
                "=",
                "Input.VariableString(ID_bind)"
              ],
              "subInstructions": []
            }
          ],
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "TextObject::String"
                  },
                  "parameters": [
                    "Texte",
                    "=",
                    "\"\""
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "TextObject::ChangeColor"
                  },
                  "parameters": [
                    "Texte",
                    "\"127;127;127\""
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": false,
                    "value": "TextObject::String"
                  },
                  "parameters": [
                    "Texte",
                    "=",
                    "Texte.VariableString(Text)"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ]
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "disabled": false,
          "folded": false,
          "name": "Debug",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "TextObject::String"
                  },
                  "parameters": [
                    "Debug",
                    "=",
                    "\"Focus_input : \" + GlobalVariableString(Focus_input) + NewLine() +\n\"Previous_Focus_input : \" + GlobalVariableString(Previous_Focus_input) + NewLine() +\n\"getInputValue(\\\"PSEUDO\\\"): \" + Input_Manager::getInputValue(Texte, \"PSEUDO\") + NewLine() +\n\"getInputValue(\\\"NAME\\\"): \" + Input_Manager::getInputValue(Texte, \"NAME\") + NewLine() +\n\"text entry memory: \" + text_entry.String() + NewLine() + NewLine() "
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::ForEach",
              "object": "Texte",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "TextObject::String"
                  },
                  "parameters": [
                    "Debug",
                    "+",
                    "\"Text Input \" + Texte.VariableString(ID_bind) + \": \" + Texte.String() + NewLine() \n"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": []
        }
      ],
      "layers": [
        {
          "name": "",
          "visibility": true,
          "cameras": [
            {
              "defaultSize": true,
              "defaultViewport": true,
              "height": 0,
              "viewportBottom": 1,
              "viewportLeft": 0,
              "viewportRight": 1,
              "viewportTop": 0,
              "width": 0
            }
          ],
          "effects": []
        }
      ],
      "behaviorsSharedData": [
        {
          "name": "Text_for_mobile",
          "type": "Mobile_keyboard::Text_for_mobile"
        }
      ]
    }
  ],
  "externalEvents": [],
  "eventsFunctionsExtensions": [
    {
      "author": "Bouh",
      "description": "Authorize to open, use and close keyboard on mobile.\nThis behavior need to be added on \"Text entry\" object.\nAction open and close keyboard is added.",
      "extensionNamespace": "",
      "fullName": "Mobile keyboard",
      "name": "Mobile_keyboard",
      "shortDescription": "Authorize to open, use and close keyboard on mobile.",
      "tags": "javascript, keyboard, mobile",
      "version": "1.0.0",
      "eventsFunctions": [
        {
          "description": "",
          "fullName": "",
          "functionType": "Action",
          "name": "Function",
          "sentence": "",
          "events": [],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "",
              "name": "",
              "optional": false,
              "supplementaryInformation": "",
              "type": "sceneName"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "",
              "name": "",
              "optional": false,
              "supplementaryInformation": "",
              "type": "objectList"
            }
          ],
          "objectGroups": []
        }
      ],
      "eventsBasedBehaviors": [
        {
          "description": "Allow to use keyboard on mobile.",
          "fullName": "Behavior",
          "name": "Text_for_mobile",
          "objectType": "TextEntryObject::TextEntry",
          "eventsFunctions": [
            {
              "description": "",
              "fullName": "",
              "functionType": "Action",
              "name": "onCreated",
              "sentence": "",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Comment",
                  "color": {
                    "b": 109,
                    "g": 230,
                    "r": 255,
                    "textB": 0,
                    "textG": 0,
                    "textR": 0
                  },
                  "comment": "For each objet how have the this behavior we create a HTML input with unique ID, this ID is stored in the object himself.",
                  "comment2": ""
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "SystemInfo::IsMobile"
                      },
                      "parameters": [],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::JsCode",
                      "inlineCode": "gdjs._extensionMobileKeyboard = gdjs._extensionMobileKeyboard || {};\n\n//Select and focus input for open keyboard, by id in HTML input\ngdjs._extensionMobileKeyboard.openKeyboard = function (eventsFunctionContext) {\n    var uniqueID = gdjs._extensionMobileKeyboard.getUniqueIdInObject(eventsFunctionContext);\n    var input = document.getElementById(uniqueID);\n    if (input) {\n        var text_entry = eventsFunctionContext.getObjects(\"Object\")[0];\n        input.value = text_entry.getString();\n        input.style.removeProperty(\"visibility\");\n        input.focus();\n    }\n}\n\n//Close input by id in input catch from keyup event\ngdjs._extensionMobileKeyboard.closeKeyboardById = function (uniqueID) {\n    var input = document.getElementById(uniqueID);\n    if (input) {\n        var text_entry = eventsFunctionContext.getObjects(\"Object\")[0];\n        text_entry.setString(input.value);\n        input.blur();\n        input.style.setProperty(\"visibility\", \"hidden\");\n    }\n}\n\n//Call the function with id from HTML input, for close keyboard\ngdjs._extensionMobileKeyboard.closeKeyboard = function (eventsFunctionContext) {\n    var uniqueID = gdjs._extensionMobileKeyboard.getUniqueIdInObject(eventsFunctionContext);\n    gdjs._extensionMobileKeyboard.closeKeyboardById(uniqueID);\n}\n\n//Save ID insode the object\nvar setUniqueIdInObject = function (id) {\n    var behaviorName = eventsFunctionContext.getBehaviorName(\"Behavior\");\n    eventsFunctionContext.getObjects(\"Object\")[0]._mobileKeyboardExtensionInput = { \"_uniqueId\": id };\n}\n\n//Return id catch when keyboard will be closed\ngdjs._extensionMobileKeyboard.getUniqueIdInObject = function (eventsFunctionContext) {\n    var behaviorName = eventsFunctionContext.getBehaviorName(\"Behavior\");\n    return eventsFunctionContext.getObjects(\"Object\")[0]._mobileKeyboardExtensionInput._uniqueId;\n}\n\n\n//INIT\nconst input = document.createElement(\"input\");//Create HTML input\ninput.type = \"text\";\ninput.setAttribute(\"spellcheck\", \"false\"); //Disable spell checking (blue line on mobile under words)\ninput.style = \"background-color: transparent;border: 0px;outline: transparent;color: #0000;\";\n\n//Create an identifier that is unique\nvar uniqueId = \"GDevelop_Mobile_Keyboard_Input\" + Date.now() + '-' + Math.floor(Math.random() * 100000);\ninput.id = uniqueId; //Apply unique id\n//Save id for HTML input in object\nsetUniqueIdInObject(uniqueId);\n\ndocument.body.appendChild(input);//Add input in HTML\n\ninput.addEventListener(\"keyup\", function (event) {\n    input.focus();\n\n    var length_string = input.value.length;\n    input.setSelectionRange(length_string, length_string); //Set selection cursor at end\n\n    if (event.keyCode == 8 || event.keyCode == 46) {//8=Backspace, 46=Del\n        input.value = input.value.slice(0, -1);//Remove the last character\n    }\n\n    var text_entry = eventsFunctionContext.getObjects(\"Object\")[0];\n    text_entry.setString(input.value);//Edit text_entry _str value\n\n    if (event.keyCode === 13) {//Enter key\n        //Send id to function for close keyboard\n        gdjs._extensionMobileKeyboard.closeKeyboard != undefined ? gdjs._extensionMobileKeyboard.closeKeyboardById(uniqueId) : null;\n    }\n\n\n}, { passive: false });\n",
                      "parameterObjects": "",
                      "useStrict": true
                    }
                  ]
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "TextEntryObject::TextEntry",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "Mobile_keyboard::Text_for_mobile",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            },
            {
              "description": "Open mobile keyboard",
              "fullName": "Open mobile keyboard",
              "functionType": "Action",
              "name": "openKeyboard",
              "sentence": "Open mobile keyboard, and save input in _PARAM0_",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "SystemInfo::IsMobile"
                      },
                      "parameters": [],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::JsCode",
                      "inlineCode": "gdjs._extensionMobileKeyboard = gdjs._extensionMobileKeyboard || {};\ngdjs._extensionMobileKeyboard.openKeyboard != undefined ? gdjs._extensionMobileKeyboard.openKeyboard(eventsFunctionContext) : null;",
                      "parameterObjects": "",
                      "useStrict": true
                    }
                  ]
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "TextEntryObject::TextEntry",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "Mobile_keyboard::Text_for_mobile",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            },
            {
              "description": "Close mobile keyboard",
              "fullName": "Close mobile keyboard",
              "functionType": "Action",
              "name": "closeKeyboard",
              "sentence": "Close mobile keyboard",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "SystemInfo::IsMobile"
                      },
                      "parameters": [],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::JsCode",
                      "inlineCode": "gdjs._extensionMobileKeyboard = gdjs._extensionMobileKeyboard || {};\r\ngdjs._extensionMobileKeyboard.closeKeyboard != undefined ? gdjs._extensionMobileKeyboard.closeKeyboard(eventsFunctionContext) : null;",
                      "parameterObjects": "",
                      "useStrict": true
                    }
                  ]
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "TextEntryObject::TextEntry",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "Mobile_keyboard::Text_for_mobile",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            },
            {
              "description": "",
              "fullName": "",
              "functionType": "Action",
              "name": "onOwnerRemovedFromScene",
              "sentence": "",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Comment",
                  "color": {
                    "b": 109,
                    "g": 230,
                    "r": 255,
                    "textB": 0,
                    "textG": 0,
                    "textR": 0
                  },
                  "comment": "When we delete the object with this behavior, we delete the HTML input linked to it",
                  "comment2": ""
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "SystemInfo::IsMobile"
                      },
                      "parameters": [],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::JsCode",
                      "inlineCode": "gdjs._extensionMobileKeyboard = gdjs._extensionMobileKeyboard || {};\n\nvar uniqueID = gdjs._extensionMobileKeyboard.getUniqueIdInObject(eventsFunctionContext);\nvar element = document.getElementById(uniqueID);\nelement.parentNode.removeChild(element);",
                      "parameterObjects": "",
                      "useStrict": true
                    }
                  ]
                }
              ],
              "parameters": [
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Object",
                  "name": "Object",
                  "optional": false,
                  "supplementaryInformation": "TextEntryObject::TextEntry",
                  "type": "object"
                },
                {
                  "codeOnly": false,
                  "defaultValue": "",
                  "description": "Behavior",
                  "name": "Behavior",
                  "optional": false,
                  "supplementaryInformation": "Mobile_keyboard::Text_for_mobile",
                  "type": "behavior"
                }
              ],
              "objectGroups": []
            }
          ],
          "propertyDescriptors": []
        }
      ]
    },
    {
      "author": "",
      "description": "",
      "extensionNamespace": "",
      "fullName": "",
      "name": "Input_Manager",
      "shortDescription": "",
      "tags": "",
      "version": "",
      "eventsFunctions": [
        {
          "description": "",
          "fullName": "",
          "functionType": "StringExpression",
          "name": "getInputValue",
          "sentence": "",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "Object",
                    "ID_bind",
                    "=",
                    "GetArgumentAsString(\"ID_bind\")"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "SetReturnString"
                  },
                  "parameters": [
                    "Object.String()"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object input",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "TextObject::Text",
              "type": "objectList"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "ID_bind of Object",
              "name": "ID_bind",
              "optional": false,
              "supplementaryInformation": "",
              "type": "string"
            }
          ],
          "objectGroups": []
        }
      ],
      "eventsBasedBehaviors": []
    }
  ],
  "externalLayouts": [],
  "externalSourceFiles": []
}